---
import PlayBallContainer from './play-ball-ui';

type TableCellData = {
  Text: string;
  Class: string | null;
  Scope: string | null;
  RowSpan: number | null;
  ColSpan: number | null;
  Width: string | null;
  TypeObj: string | null;
};

type TableRowData = {
  row: TableCellData[];
  Class: string | null;
  OnClick: string | null;
  Style: string | null;
  Value: string | null;
  Id: string | null;
};

type TeamRankingResponse = {
  rows: TableRowData[];
  totalCnt: string;
  headerClass: string | null;
  tbodyClass: string | null;
  tfootClass: string | null;
  title: string;
  caption: string | null;
  result_cd: string | null;
  result_msg: string | null;
  code: string;
  msg: string;
};

type TeamStanding = {
  rank: number;
  team: string;
  games: number;
  wins: number;
  losses: number;
  draws: number;
  winRate: number;
  gamesBehind: string;
  recent: string;
};

function stripHtml(html: string): string {
  return html.replace(/<[^>]*>/g, '').trim();
}

function parseRowData(data: TeamRankingResponse) {
  const ranking: TeamStanding[] = data.rows.map((rowObj) => {
    const { row } = rowObj;
    return {
      rank: Number(row[0]?.Text ?? 0),
      team: stripHtml(row[1]?.Text ?? ''),
      games: Number(row[2]?.Text ?? 0),
      wins: Number(row[3]?.Text ?? 0),
      losses: Number(row[4]?.Text ?? 0),
      draws: Number(row[5]?.Text ?? 0),
      winRate: Number(row[6]?.Text ?? 0),
      gamesBehind: row[7]?.Text ?? '',
      recent: row[8]?.Text ?? '',
    };
  });

  const match = /(\d{4})년\s*(\d{1,2})월\s*(\d{1,2})일/.exec(data.title);
  let date: Date | null = null;
  if (match) {
    const year = Number(match[1]);
    const month = Number(match[2]);
    const day = Number(match[3]);

    date = new Date(year, month - 1, day);
  }

  const giantsData = ranking.find((item) => item.team === '롯데');

  return { ranking, giantsData, date };
}

let teamRankingList: TeamStanding[] = [];
let lotteGiants: TeamStanding | null = null;
let updateDate: Date | null = null;
let errorMessage: string | null = null;

try {
  const res = await fetch(
    'https://www.koreabaseball.com/ws/Main.asmx/GetTeamRank',
    { method: 'POST' },
  );

  if (!res.ok) {
    errorMessage = '데이터 어디갔어!?';
  } else {
    const data = (await res.json()) as TeamRankingResponse;

    const { ranking, giantsData, date } = parseRowData(data);

    teamRankingList = ranking;
    lotteGiants = giantsData ?? null;
    updateDate = date;
  }
} catch {
  errorMessage = '마! 데이타 어데로갔노!?';
}
---

<PlayBallContainer
  teamRankingList={teamRankingList}
  lotteGiants={lotteGiants}
  updateDate={updateDate}
  errorMessage={errorMessage}
/>
