<script is:inline>
  const getThemePreference = () => {
    return localStorage.getItem('theme') || 'system';
  };

  const resolveTheme = (theme) => {
    if (theme === 'system') {
      theme = window.matchMedia('(prefers-color-scheme: dark)').matches
        ? 'dark'
        : 'light';
    }

    const css = document.createElement('style');
    css.textContent = '*, *::before, *::after { transition: none !important; }';
    document.head.appendChild(css);

    //
    if (theme === 'dark') {
      document.documentElement.classList.add('dark');
      document.documentElement.classList.remove('light');
    } else {
      document.documentElement.classList.add('light');
      document.documentElement.classList.remove('dark');
    }

    requestAnimationFrame(() => {
      requestAnimationFrame(() => {
        document.head.removeChild(css);
      });
    });
  };

  resolveTheme(getThemePreference());

  const handleThemeUpdate = () => {
    resolveTheme(getThemePreference());

    window.dispatchEvent(new CustomEvent('theme-update'));
  };

  window
    .matchMedia('(prefers-color-scheme: dark)')
    .addEventListener('change', () => {
      if (getThemePreference() === 'system') {
        handleThemeUpdate();
      }
    });

  window.addEventListener('theme-change', handleThemeUpdate);

  window.addEventListener('storage', (e) => {
    if (e.key === 'theme') handleThemeUpdate();
  });
</script>
